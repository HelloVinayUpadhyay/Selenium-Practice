package com.vinay;

import java.io.File;
import java.io.IOException;
import java.time.Duration;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;

public class BaseClass {

	WebDriver driver;

	public void LaunchBrowser(String URL) {
		driver = new ChromeDriver();
		driver.get(URL);
		driver.manage().window().maximize();
	}

	public boolean ElementDisply(WebElement Element) {
		return Element.isDisplayed();
	}

	public boolean ElementEnable(WebElement Element) {

		return Element.isEnabled();
	}

	public boolean ElementSelected(WebElement Element) {

		return Element.isSelected();
	}

	public void getText(WebElement Element) {
		try {
			String text = Element.getText();
			System.out.println(text);
		} catch (Exception e) {
			System.err.println("Element is not tracable");
		}
	}

	public void TakeScreenshot(String FileName) throws IOException {
		TakesScreenshot ts = (TakesScreenshot) driver;
		File Source = ts.getScreenshotAs(OutputType.FILE);
		File Destination = new File(
				"C:\\Users\\Hp\\eclipse-workspace\\Guru99_Mavan_Project\\Screenshots\\" + FileName + ".png");
		// FileHandler.copy(Source,Destination);
		FileUtils.copyFile(Source, Destination);
	}

	public void Scroll(int x, int y) {
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("window.scrollBy(" + x + "," + y + ")");
	}

	public void DropdownWithIndex(WebElement DropDown, int index) {
		Select DD = new Select(DropDown);
		DD.selectByIndex(index);

	}

	public void DropdownByValue(WebElement DropDown, String Value) {
		Select DD = new Select(DropDown);
		DD.selectByValue(Value);

	}

	public void DropDownByVisibleText(WebElement DropDown, String VisibleText) {
		Select DD = new Select(DropDown);
		DD.selectByValue(VisibleText);
	}

	public void IFrameSwitchByXpath(String Xpath) {
		driver.switchTo().frame(Xpath);
	}

	public void IFrameSwitchByIndex(int Index) {
		driver.switchTo().frame(Index);
	}

	public void IFrameSwitchByXPath(WebElement IFrameXPath) {
		driver.switchTo().frame(IFrameXPath);
	}

	public void Waitimplicit(long Sec) {
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(Sec));
	}

	public void WaitSleep(long Sec) throws InterruptedException {
		Thread.sleep(Sec);
	}

	public static void driverSetup(String Browser) {
		if (Browser.equalsIgnoreCase("Chrome")) {
			driver = new ChromeDriver();
		} else {
			System.err.println("Current Only Chrome browser supported");
		}

	}

	public static void Navigate(String nextURL) {
		driver.navigate().to(nextURL);
	}

	public static void get(String URL) {
		driver.get(URL);
		driver.manage().window().maximize();
	}

	public static boolean isVisible(String ElementxPath, String ElementName) {
		WebElement Element = driver.findElement(By.xpath(ElementxPath));
		if (Element.isDisplayed()==true) {
			System.out.println (ElementName +" is Visible");
		}
		else {
			System.err.println(ElementName +" is not Visible");
		}
		System.out.println(Element.getText());
		System.out.println();
		return Element.isDisplayed();
	}

	public static void clicklElement(String xPath) {
		driver.findElement(By.xpath(xPath)).click();
	}

	public static void buttonClick(String ElementXPath) {
		WebElement webElement = driver.findElement(By.xpath(ElementXPath));
		webElement.click();
	}

	public static void sendDetailsByID(String ID, String Detail) {
		WebElement Element = driver.findElement(By.id(ID));
		Element.sendKeys(Detail);
	}
	
	public static void sendDetails(String xPath, String Details) {
		WebElement Element = driver.findElement(By.xpath(xPath));
		Element.click();
		Element.sendKeys(Details);
	}
	
	public static void dropdown(String xPath, int Value) {
		WebElement Element = driver.findElement(By.xpath(xPath));
		Element.click();
		Select dd = new Select (Element);
		dd.selectByIndex(Value);
	}
	
	public static void dropdownbyValue(String xPath, String Value) {
		WebElement Element = driver.findElement(By.xpath(xPath));
		Select dd = new Select (Element);
		dd.selectByValue(Value);
	}
	
	public static void tearDown() {
		driver.quit();
	}

}
